// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String     @unique
  password      String
  name          String?
  notifications Json[]
  createdAt     DateTime   @default(now())
  role          Role       @default(user)
  Wordbook      Wordbook[]
  Stats         Stats[]
  Tests         Tests[]
}

model Wordbook {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  source    String?  @default("eng")
  name      String?  @default("My Workbook")
  target    String?  @default("ru")
  words     Word[]
  category  Category @default(any)
  private   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Stats {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @db.ObjectId
  translated   Int     @default(0)
  rightanswers Int     @default(0)
  wronganswers Int     @default(0)
  lvl          Int     @default(0)
  points       Int?    @default(0)
  private      Boolean @default(false)
}

model Tests {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
  name    String   @default("My Test")
  data    Json[]
  created DateTime @default(now())
  private Boolean  @default(false)
}

enum Role {
  user
  admin
}

enum Category {
  learned
  liked
  any
}

type Word {
  eng  String
  rus  String
  date DateTime @default(now())
}

type Notification {
  type String
  text String
  date DateTime @default(now())
}
